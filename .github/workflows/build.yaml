name: build-check

on: [push]

jobs:
  ubuntu:
    runs-on: "ubuntu-latest"

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install Monolithic Vulkan SDK binary release
      uses: humbletim/setup-vulkan-sdk@main
      with:
        vulkan-version: 1.3.204.0
        vulkan-components: prebuilt
        vulkan-use-cache: true

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt install -y xorg-dev

    - name: Configure CMake cache
      run: |
        mkdir build
        cd build
        cmake .. -DBUILD_TESTS=ON

    - name: Build
      run: |
        cd build
        cmake --build . --config Debug -j2

    - name: Test
      run: ./build/tests/kronic_tests

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: kronic-ubuntu-${{ github.sha }}
        if-no-files-found: error
        path: |
          ./build/kronic/kronic

  windows:
    runs-on: "windows-latest"
    env:
      VULKAN_SDK: C:\VulkanSDK\

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install Vulkan SDK
      run: |
          $ver = (Invoke-WebRequest -Uri "https://vulkan.lunarg.com/sdk/latest.json" | ConvertFrom-Json).windows
          echo Version $ver
          $ProgressPreference = 'SilentlyContinue'
          Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/$ver/windows/VulkanSDK-$ver-Installer.exe" -OutFile VulkanSDK.exe
          echo Downloaded
          .\VulkanSDK.exe --root C:\VulkanSDK  --accept-licenses --default-answer --confirm-command install

    - name: Configure CMake cache
      run: |
        mkdir build
        cd build
        cmake .. -DBUILD_TESTS=ON

    # TODO: Fix this.
    # We do a release build because the LunarG Vulkan SDK ships 
    # with a shaderc_combined.lib that links to release mode 
    # multithreaded runtime binaries. Doing a debug build with 
    # it would lead to linking errors.
    - name: Build
      run: |
        cd build
        cmake --build . --config Release -j2

    - name: Test
      run: ./build/tests/Release/kronic_tests

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: kronic-windows-${{ github.sha }}
        if-no-files-found: error
        path: |
          ./build/kronic/Release/kronic.exe
