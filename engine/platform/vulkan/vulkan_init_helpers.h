#pragma once

#include "vulkan/vulkan.h"

namespace VulkanInit
{
VkCommandPoolCreateInfo command_pool_create_info(uint32_t queue_family, VkCommandPoolCreateFlags flags = 0);
VkCommandBufferAllocateInfo command_buffer_allocate_info(VkCommandPool pool, uint32_t count = 1, VkCommandBufferLevel level = VK_COMMAND_BUFFER_LEVEL_PRIMARY);
VkPipelineShaderStageCreateInfo pipeline_shader_stage_create_info(VkShaderStageFlagBits stage, VkShaderModule shader_module);
VkPipelineVertexInputStateCreateInfo pipeline_vertex_input_state_create_info();
VkPipelineInputAssemblyStateCreateInfo pipeline_input_assembly_state_create_info(VkPrimitiveTopology topology);
VkPipelineRasterizationStateCreateInfo pipeline_rasterization_state_create_info(VkPolygonMode poly_mode);
VkPipelineMultisampleStateCreateInfo pipeline_multisample_state_create_info();
VkPipelineColorBlendAttachmentState color_blend_attachment_state();
VkPipelineLayoutCreateInfo pipeline_layout_create_info();
};
